<?xml version="1.0"?>

<!-- Initializes kuka and ball for balancing task -->
<launch>
	<!-- Some arguments I copied over from a work project -->
	<arg name="paused" default="true"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="extra_gazebo_args" default=""/>
	<arg name="gui" default="true"/>
	<arg name="recording" default="false"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>
	<arg name="physics" default="ode"/>
	<arg name="verbose" default="false"/>
	<arg name="output" default="screen"/>
	<arg name="world_name" default="$(find robot_agent_gazebo)/worlds/training_1.world"/>
	<arg name="respawn_gazebo" default="false"/>
	<arg name="pub_clock_frequency" default="100"/>
	<arg name="use_clock_frequency" default="false"/>
	<arg name="server_required" default="false"/>
	<arg name="gui_required" default="false"/>

	<param name="/use_sim_time" value="$(arg use_sim_time)"/>

	<!-- Command args -->
	<arg unless="$(arg paused)" name="command_arg1" value=""/>
	<arg if="$(arg paused)" name="command_arg1" value="-u"/>
	<arg unless="$(arg recording)" name="command_arg2" value=""/>
	<arg if="$(arg recording)" name="command_arg2" value="-r"/>
	<arg unless="$(arg verbose)" name="command_arg3" value=""/>
	<arg if="$(arg verbose)" name="command_arg3" value="--verbose"/>
	<arg unless="$(arg debug)" name="script_type" value="gzserver"/>
	<arg if="$(arg debug)" name="script_type" value="debug"/>

	<!-- Gazebo stuff -->
	<node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"
		args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" required="$(arg server_required)"/>
	<group if="$(arg gui)">
		<node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="$(arg output)" args="$(arg command_arg3)" required="$(arg gui_required)"/>
	</group>

	<!-- Kuka stuff -->
	<arg name="hardware_interface" default="EffortJointInterface"/>
	
	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_agent_gazebo)/models/kuka_with_plate/urdf/kuka_with_plate.urdf.xacro'"/>
	
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model kuka_with_plate -param robot_description -J iiwa_joint_2 0.19634954084936207 -J iiwa_joint_4 -1.7671458676442586 -J iiwa_joint_6 -0.39269908169872414 "/>

	<node name="urdf_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-file $(find robot_agent_gazebo)/models/ball/urdf/ball.urdf -urdf -x 0.7 -z 0.8 -model the_ball"/>

	<remap from="/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory" to="/iiwa/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory"/>

	<group ns="iiwa">
		<include file="$(find robot_agent_gazebo)/models/kuka_with_plate/launch/iiwa_control.launch">
			<arg name="hardware_interface" value="$(arg hardware_interface)"/>
			<!--arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller"/-->
			<arg name="controllers" value="joint_state_controller $(arg hardware_interface)_J1_controller $(arg hardware_interface)_J2_controller
				$(arg hardware_interface)_J3_controller $(arg hardware_interface)_J4_controller $(arg hardware_interface)_J5_controller $(arg hardware_interface)_J6_controller $(arg hardware_interface)_J7_controller"/>
			<arg name="robot_name" value="iiwa" />
			<arg name="model" value="iiwa7"/>
		</include>
	</group>
</launch>
	


